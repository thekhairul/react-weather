{"version":3,"sources":["components/switch/Switch.js","components/toast/Toast.js","components/weather-search/WeatherSearch.js","components/weather-current/WeatherCurrent.js","components/weather-forecast/WeatherForecast.js","components/weather-sun/WeatherSun.js","App.js","serviceWorker.js","index.js","components/weather-search/WeatherSearch.module.scss","components/weather-current/WeatherCurrent.module.scss","assets/icon-wind.svg","assets/icon-humidity.svg","assets/icon-pressure.svg","assets/icon-visibility.svg","components/weather-forecast/WeatherForecast.module.scss","components/weather-sun/WeatherSun.module.scss"],"names":["Switch","_ref","switchFn","react_default","a","createElement","className","onClick","event","target","classList","toggle","Toast","toastProps","classes","concat","visible","WeatherSearch","handleWeatherSearch","styles","action","id","onSubmit","e","preventDefault","elements","value","type","name","placeholder","required","WeatherCurrent","city","country","condition","iconId","temp","wind","humidity","pressure","visibility","tempUnit","Countries","dist_default","format","Date","src","iconWind","alt","iconHumidity","iconPressure","iconVisibility","defaults","global","defaultFontColor","WeatherForecast","labels","data","map","el","chartOptions","tooltips","callbacks","label","tooltipItem","Math","round","yLabel","scales","xAxes","scaleLabel","display","labelString","yAxes","ticks","stepSize","chartData","datasets","fill","lineTension","backgroundColor","borderColor","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","pointBorderColor","pointBackgroundColor","pointBorderWidth","pointHoverRadius","pointHoverBackgroundColor","pointHoverBorderColor","pointHoverBorderWidth","pointRadius","pointHitRadius","es","options","WeatherSun","sunrise","sunset","unix","App","state","currentWeatherAPI","weatherForecastAPI","currentWeather","weatherForecast","this","setState","_this2","setTimeout","_this3","axios","get","then","res","catch","err","showToast","reducedList","list","slice","forecast","i","push","main","time","dt_txt","split","cityName","fetchWeather","WeatherForecastCMP","weather","weather_forecast_WeatherForecast","hour","toast_Toast","weather_search_WeatherSearch","bind","weather_current_WeatherCurrent","sys","speed","weather_sun_WeatherSun","switch_Switch","handleCelsius2Fahrenheit","Component","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister","module","exports","weather-search","weather-current","__webpack_require__","p","weather-forecast","weather-sun"],"mappings":"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","file":"static/js/main.ce39d5fa.chunk.js","sourcesContent":["import React from \"react\";\n\nconst Switch = ({ switchFn }) => {\n  const handleSwitch = event => {\n    event.target.classList.toggle(\"active\");\n    switchFn();\n  };\n\n  return <span className=\"switch\" onClick={handleSwitch} />;\n};\n\nexport default Switch;\n","import React from \"react\";\n\nconst Toast = ({ toastProps }) => {\n  let classes = `toast ${toastProps.visible ? \"active\" : \"\"}`;\n  let message = \"Oops !! Nothing found. Try something else.\";\n  return (\n    <div className={classes}>\n      <h3>{message}</h3>\n    </div>\n  );\n};\n\nexport default Toast;\n","import React from \"react\";\nimport styles from \"./WeatherSearch.module.scss\";\n\nconst WeatherSearch = ({ handleWeatherSearch }) => {\n  const handleWeatherSearchSubmit = e => {\n    e.preventDefault();\n    handleWeatherSearch(e.target.elements[\"weatherQuery\"].value);\n  };\n\n  return (\n    <div className={styles[\"weather-search\"]}>\n      <form\n        action=\"\"\n        className=\"weather-search__form\"\n        id=\"weather-search-form\"\n        onSubmit={handleWeatherSearchSubmit}\n      >\n        <input\n          type=\"search\"\n          id=\"weather-search-input\"\n          name=\"weatherQuery\"\n          placeholder=\"Name of city\"\n          required\n        />\n        <button className=\"weather-search__submit\">search</button>\n      </form>\n    </div>\n  );\n};\n\nexport default WeatherSearch;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Countries from \"./../../assets/data/countriesISO3166.json\";\nimport Moment from \"react-moment\";\nimport styles from \"./WeatherCurrent.module.scss\";\nimport iconWind from \"../../assets/icon-wind.svg\";\nimport iconHumidity from \"../../assets/icon-humidity.svg\";\nimport iconPressure from \"../../assets/icon-pressure.svg\";\nimport iconVisibility from \"../../assets/icon-visibility.svg\";\n\nconst WeatherCurrent = ({\n  city,\n  country,\n  condition,\n  iconId,\n  temp,\n  wind,\n  humidity,\n  pressure,\n  visibility,\n  tempUnit\n}) => {\n  return (\n    <div className={styles[\"weather-current\"]}>\n      <div className=\"weather-current__featured\">\n        <div className=\"meta\">\n          <span className=\"location\">\n            {city}, {Countries[country]},\n          </span>\n          <span className=\"date\">\n            <Moment format=\"Do MMM YYYY\">{new Date()}</Moment>\n          </span>\n        </div>\n        <h3 className=\"condition\">{condition}</h3>\n        <div className=\"temperature\">\n          <i className={`icon wi wi-owm-${iconId}`} />\n          <span className=\"value\">\n            {tempUnit === \"C\" ? temp : (temp * 9) / 5 + 32}\n            {tempUnit === \"C\" ? (\n              <i className=\"wi wi-celsius\" />\n            ) : (\n              <i className=\"wi wi-fahrenheit\" />\n            )}\n          </span>\n        </div>\n      </div>\n\n      <div className=\"weather-current__details\">\n        <ul>\n          <li>\n            <img src={iconWind} alt=\"\" />\n            <span>\n              <b>Wind:</b> {wind} m/s\n            </span>\n          </li>\n          <li>\n            <img src={iconHumidity} alt=\"\" />\n            <span>\n              <b>Humidity:</b> {humidity}%\n            </span>\n          </li>\n          <li>\n            <img src={iconPressure} alt=\"\" />\n            <span>\n              <b>Pressure:</b> {pressure} hpa\n            </span>\n          </li>\n          <li>\n            <img src={iconVisibility} alt=\"\" />\n            <span>\n              <b>Visibility:</b> {visibility ? visibility / 1000 : \"--\"} km\n            </span>\n          </li>\n        </ul>\n      </div>\n    </div>\n  );\n};\n\n// validate props\nWeatherCurrent.propTypes = {\n  city: PropTypes.string.isRequired,\n  country: PropTypes.string.isRequired,\n  condition: PropTypes.string.isRequired,\n  iconId: PropTypes.number.isRequired,\n  temp: PropTypes.number.isRequired,\n  wind: PropTypes.number.isRequired,\n  humidity: PropTypes.number.isRequired,\n  pressure: PropTypes.number.isRequired,\n  visibility: PropTypes.number.isRequired\n};\n\nexport default WeatherCurrent;\n","// TODO: chart js fontawesome https://stackoverflow.com/questions/36979474/how-to-change-the-labels-to-the-image-icon-in-bar-chart-js\nimport React from \"react\";\nimport { Line } from \"react-chartjs-2\";\nimport { defaults } from \"react-chartjs-2\";\nimport styles from \"./WeatherForecast.module.scss\";\n\n// chart js default font color\ndefaults.global.defaultFontColor = \"black\";\n\nconst WeatherForecast = ({ labels, data, tempUnit }) => {\n  // convert temp data into fahrenheit if neccessary\n  if (tempUnit === \"F\") {\n    data = data.map(el => (el * 9) / 5 + 32);\n  }\n  // chart options\n  const chartOptions = {\n    tooltips: {\n      callbacks: {\n        label: function(tooltipItem, data) {\n          var label = \"Temperature\";\n\n          if (label) {\n            label += \": \";\n          }\n          label += Math.round(tooltipItem.yLabel);\n          return label + \"*\" + tempUnit;\n        }\n      }\n    },\n    scales: {\n      xAxes: [\n        {\n          scaleLabel: {\n            display: true,\n            labelString: \"Time\"\n          }\n        }\n      ],\n      yAxes: [\n        {\n          ticks: {\n            stepSize: 1\n          },\n          scaleLabel: {\n            display: true,\n            labelString: \"Temperature *\" + tempUnit\n          }\n        }\n      ]\n    }\n  };\n  const chartData = {\n    labels: labels,\n    datasets: [\n      {\n        label: \"3 Hourly Forecast\",\n        fill: false,\n        lineTension: 0.1,\n        backgroundColor: \"rgba(0,0,0,1)\",\n        borderColor: \"rgba(0,0,0,1)\",\n        borderCapStyle: \"butt\",\n        borderDash: [],\n        borderDashOffset: 0.0,\n        borderJoinStyle: \"miter\",\n        pointBorderColor: \"rgba(0,0,0,1)\",\n        pointBackgroundColor: \"#fff\",\n        pointBorderWidth: 4,\n        pointHoverRadius: 5,\n        pointHoverBackgroundColor: \"rgba(255,255,255,1)\",\n        pointHoverBorderColor: \"rgba(255,255,255,1)\",\n        pointHoverBorderWidth: 5,\n        pointRadius: 5,\n        pointHitRadius: 8,\n        data: data\n      }\n    ]\n  };\n  return (\n    <div className={styles[\"weather-forecast\"]}>\n      <Line data={chartData} options={chartOptions} />\n    </div>\n  );\n};\n\nexport default WeatherForecast;\n","import React from \"react\";\nimport Moment from \"react-moment\";\nimport styles from \"./WeatherSun.module.scss\";\n\nconst WeatherSun = ({ sunrise, sunset }) => {\n  return (\n    <div className={styles[\"weather-sun\"]}>\n      <span className=\"weather-sun__rise\">\n        <i className=\"wi wi-sunrise\" />\n        Sunrise:\n        <Moment format=\"hh:mm A\" unix>\n          {sunrise}\n        </Moment>\n      </span>\n      <span className=\"weather-sun__set\">\n        <i className=\"wi wi-sunset\" />\n        Sunset:\n        <Moment format=\"hh:mm A\" unix>\n          {sunset}\n        </Moment>\n      </span>\n    </div>\n  );\n};\n\nexport default WeatherSun;\n","import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport Switch from \"./components/switch/Switch\";\nimport Toast from \"./components/toast/Toast\";\nimport WeatherSearch from \"./components/weather-search/WeatherSearch\";\nimport WeatherCurrent from \"./components/weather-current/WeatherCurrent\";\nimport WeatherForecast from \"./components/weather-forecast/WeatherForecast\";\nimport WeatherSun from \"./components/weather-sun/WeatherSun\";\n\nimport \"./main.scss\";\n\nclass App extends Component {\n  state = {\n    currentWeatherAPI:\n      \"https://api.openweathermap.org/data/2.5/weather?q=Dhaka&APPID=a6b32c215b9e2bed2fe00783d7057ada&units=metric\",\n    weatherForecastAPI:\n      \"https://api.openweathermap.org/data/2.5/forecast?q=Dhaka&APPID=a6b32c215b9e2bed2fe00783d7057ada&units=metric\",\n    currentWeather: null,\n    weatherForecast: null,\n    tempUnit: \"C\",\n    toastProps: {\n      visible: false,\n      type: \"success\"\n    }\n  };\n\n  handleCelsius2Fahrenheit() {\n    this.setState(state => ({\n      tempUnit: state.tempUnit === \"C\" ? \"F\" : \"C\"\n    }));\n  }\n\n  showToast(type) {\n    this.setState({ toastProps: { visible: true, type: \"error\" } }, () => {\n      setTimeout(\n        () =>\n          this.setState({ toastProps: { visible: false, type: \"success\" } }),\n        3000\n      );\n    });\n  }\n\n  fetchWeather() {\n    // fetch current weather\n    axios\n      .get(this.state.currentWeatherAPI)\n      .then(res => {\n        this.setState({ currentWeather: res.data });\n      })\n      .catch(err => {\n        this.showToast(\"error\");\n      });\n\n    // fetch upcoming weather forecast\n    axios.get(this.state.weatherForecastAPI).then(res => {\n      const reducedList = res.data.list.slice(0, 7);\n      const forecast = [];\n      reducedList.map((el, i) => {\n        forecast.push({\n          temp: el.main.temp,\n          time: el.dt_txt.split(\" \")[1]\n        });\n\n        return 0;\n      });\n      this.setState({ weatherForecast: forecast });\n    });\n  }\n\n  async handleWeatherSearch(cityName) {\n    const currentWeatherAPI = `https://api.openweathermap.org/data/2.5/weather?q=${cityName}&APPID=a6b32c215b9e2bed2fe00783d7057ada&units=metric`;\n    const weatherForecastAPI = `https://api.openweathermap.org/data/2.5/forecast?q=${cityName}&APPID=a6b32c215b9e2bed2fe00783d7057ada&units=metric`;\n    await this.setState({ currentWeatherAPI, weatherForecastAPI });\n    this.fetchWeather();\n  }\n\n  componentDidMount() {\n    this.fetchWeather();\n  }\n\n  render() {\n    // render nothing before API fetch is complete\n    if (this.state.currentWeather === null) {\n      return null;\n    }\n\n    // cache weather data once fetched\n    const weather = this.state.currentWeather;\n    const forecast = this.state.weatherForecast;\n\n    let WeatherForecastCMP;\n\n    if (forecast) {\n      WeatherForecastCMP = (\n        <WeatherForecast\n          labels={forecast.map(el => {\n            const hour = +el.time.split(\":\")[0]; // '+' used to convert str into num\n            if (hour > 12) {\n              return `${hour - 12} PM`;\n            } else if (hour === 12) {\n              return `${hour} PM`;\n            } else {\n              return `${hour} AM`;\n            }\n          })}\n          data={forecast.map(el => el.temp)}\n          tempUnit={this.state.tempUnit}\n        />\n      );\n    } else {\n      WeatherForecastCMP = <span>Loading...</span>;\n    }\n\n    return (\n      <div className=\"App\">\n        <Toast toastProps={this.state.toastProps} />\n        <div className=\"App__header\">\n          <div className=\"App__header__container container\">\n            <WeatherSearch\n              handleWeatherSearch={this.handleWeatherSearch.bind(this)}\n            />\n          </div>\n        </div>\n\n        <div className=\"App__main\">\n          <div className=\"App__main__container container\">\n            <WeatherCurrent\n              city={weather.name}\n              country={weather.sys.country}\n              condition={weather.weather[0].main}\n              iconId={weather.weather[0].id}\n              temp={weather.main.temp}\n              wind={weather.wind.speed}\n              humidity={weather.main.humidity}\n              pressure={weather.main.pressure}\n              visibility={weather.visibility || 0}\n              tempUnit={this.state.tempUnit}\n            />\n            {WeatherForecastCMP}\n            <div className=\"App__main__footer\">\n              <WeatherSun\n                sunrise={weather.sys.sunrise}\n                sunset={weather.sys.sunset}\n              />\n              <div className=\"temp-unit-toggle\">\n                <i className=\"wi wi-celsius\" />\n                <Switch switchFn={this.handleCelsius2Fahrenheit.bind(this)} />\n                <i className=\"wi wi-fahrenheit\" />\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"weather-search\":\"WeatherSearch_weather-search__2KUOK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"weather-current\":\"WeatherCurrent_weather-current__3KndY\"};","module.exports = __webpack_public_path__ + \"static/media/icon-wind.28f3b971.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-humidity.0f861d85.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-pressure.5a51538d.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-visibility.b1b044b3.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"weather-forecast\":\"WeatherForecast_weather-forecast__2wnZF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"weather-sun\":\"WeatherSun_weather-sun__2CYSf\"};"],"sourceRoot":""}